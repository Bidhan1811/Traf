generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
    id             String     @id @default(uuid())
    clerkUserId    String     @unique
    email          String     @unique
    name           String?
    imageUrl       String?
    transactions   Transaction[]
    accounts       Account[]
    budgets        Budget[]
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt

    @@map("users")
  } 

model Account{
    id             String         @id @default(uuid())
    name           String         @unique
    type          AccountType     
    balance        Decimal
    isDefault      Boolean
    userId         String
    user           User           @relation(fields: [userId], references: [id], onDelete: Cascade)
    transactions   Transaction[]
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt


    @@index([userId])
    @@map("accounts")
}

enum AccountType{
  CURRENT
  SAVINGS
}

model Transaction{
    id                 String               @id @default(uuid())
    amount             Decimal              
    type               TransactionType      
    description        String?
    date               DateTime
    category           String
    receiptUrl         String?              
    isRecurring        Boolean?
    recurringInterval  RecurringInterval?   
    nextRecurringDate  DateTime?            
    lastProcessed      DateTime?
    status             TransactionStatus    @default(COMPLETED)
    userId             String
    user               User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
    accountId          String
    account            Account              @relation(fields: [accountId], references: [id], onDelete: Cascade)
    createdAt          DateTime                 @default(now())
    updatedAt          DateTime                 @updatedAt


    @@index([userId])
    @@index([accountId])
    @@map("transactions")
}

enum TransactionType{
  INCOME
  EXPENSE
}

enum RecurringInterval{
    DAILY
    WEEKLY
    MONTHLY
    YEARLY
}

enum TransactionStatus{
  PENDING
  COMPLETED
  FAILED
}

model Budget{
  id                 String               @id @default(uuid())
  amount             Decimal 
  lastAlertSent      DateTime?
  userId             String               @unique
  user               User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt

  @@index([userId])
  @@map("budgets")
}
